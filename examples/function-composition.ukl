func addOne(a : usize =) : usize = {
    return a + 1;
}

func add(a : u8, b : usize) : usize = {
    return a + b;
}

func main() : = {
    // One thing I think that could be cool to experiment with would be 
    // first-class support for function composition. This would act like 
    // (f ∘ g)(x) or f(g(x)).
    //
    // if g: X -> Y and f: Y -> Z, then for h = f ∘ g, h: X -> Z
    let res : i32 = addOne ** add (2, 3)
    let str := "This is\r\n\t\0";

    // This should also be possible to write.
    let res = ( addOne ** add ) (2, 3);

    // But not this, it seems weird to write and read.
    // let res = addOne ** add 2;
    res = addOne**add(3,4); // Whitespace would be optional so you could write
			    // it like this, but I think the spaces makes it 
			    // clearer.
}
